{"version":3,"sources":["assets\\Scripts\\GameController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nenum Direction {\r\n    UP,\r\n    DOWN,\r\n    RIGHT,\r\n    LEFT\r\n}\r\n\r\n@ccclass\r\nexport default class GameController extends cc.Component {\r\n\r\n    @property(cc.Prefab) snakeBody: cc.Prefab = new cc.Prefab();\r\n    @property(cc.Prefab) applePrefab: cc.Prefab = new cc.Prefab();\r\n    @property(cc.Label) scoreText: cc.Label = new cc.Label();\r\n    @property(cc.Node) gameText: cc.Node = new cc.Node();\r\n\r\n    private snake: Array<cc.Node> = [];\r\n    private snakeInitialLength: number = 5;\r\n    private isPlaying: boolean = true;\r\n\r\n    private speed: number = 0;\r\n    private score: number = 0;\r\n    private updateDelay: number = 0;\r\n    private addNew: boolean = false;\r\n    private direction: Direction = Direction.UP;\r\n    private apple: cc.Node = null;\r\n\r\n    onLoad() {\r\n        this.registerKeyEvent()\r\n        this.spawnFood();\r\n        this.initSnake();\r\n    }\r\n\r\n    initSnake() {\r\n        this.snake = [];\r\n        for (let i = 0; i < this.snakeInitialLength; i++) {\r\n            this.incrementSnakeBody(i);\r\n        }\r\n    }\r\n\r\n    // Code crime! Overloading seemed too much work, ts doesn't make it easy :P\r\n    incrementSnakeBodyWithPosition(position: cc.Vec2) {\r\n        const snakeBodyNode = cc.instantiate(this.snakeBody);\r\n        snakeBodyNode.parent = this.node;\r\n        snakeBodyNode.setPosition(position.x, position.y);\r\n        this.snake.unshift(snakeBodyNode);\r\n    }\r\n\r\n    incrementSnakeBody(i: number) {\r\n        const snakeBodyNode = cc.instantiate(this.snakeBody);\r\n        snakeBodyNode.parent = this.node;\r\n        snakeBodyNode.setPosition(i * 70, 0);\r\n        this.snake.push(snakeBodyNode);\r\n    }\r\n\r\n    registerKeyEvent() {\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n    }\r\n\r\n    onKeyDown(event) {\r\n        switch (event.keyCode) {\r\n            case cc.macro.KEY.w:\r\n                if (this.direction != Direction.DOWN)\r\n                    this.direction = Direction.UP;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                if (this.direction != Direction.LEFT)\r\n                    this.direction = Direction.RIGHT;\r\n                break;\r\n            case cc.macro.KEY.a:\r\n                if (this.direction != Direction.RIGHT)\r\n                    this.direction = Direction.LEFT;\r\n                break;\r\n            case cc.macro.KEY.s:\r\n                if (this.direction != Direction.UP)\r\n                    this.direction = Direction.DOWN;\r\n                break;\r\n            case cc.macro.KEY.space:\r\n                this.reset();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getRandomPosition(min, max) {\r\n        return Math.round(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    spawnFood() {\r\n        let randomX = this.getRandomPosition(-450, 450);\r\n        let randomY = this.getRandomPosition(-800, 800);\r\n        this.apple = cc.instantiate(this.applePrefab);\r\n        this.apple.setPosition(randomX, randomY);\r\n        this.apple.parent = this.node.parent;\r\n    }\r\n\r\n    appleCollision() {\r\n        this.apple.destroy();\r\n        this.spawnFood();\r\n        this.score++;\r\n        this.scoreText.string = String(this.score);\r\n        this.addNew = true;\r\n    }\r\n\r\n    getScore() {\r\n        return this.score;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this.isPlaying) {\r\n            this.speed = Math.min(15, Math.floor(this.score / 10));\r\n            this.updateDelay++;\r\n            if ((this.updateDelay % (15 - this.speed)) === 0) {\r\n\r\n                let firstCell = this.snake[this.snake.length - 1],\r\n                    lastCell = this.snake.shift(),\r\n                    oldLastCellx = lastCell.x,\r\n                    oldLastCelly = lastCell.y;\r\n                if (this.direction === Direction.RIGHT) {\r\n                    lastCell.x = firstCell.x + 70;\r\n                    lastCell.y = firstCell.y;\r\n                }\r\n                else if (this.direction === Direction.LEFT) {\r\n                    lastCell.x = firstCell.x - 70;\r\n                    lastCell.y = firstCell.y;\r\n                }\r\n                else if (this.direction === Direction.UP) {\r\n                    lastCell.x = firstCell.x;\r\n                    lastCell.y = firstCell.y + 70;\r\n                }\r\n                else if (this.direction === Direction.DOWN) {\r\n                    lastCell.x = firstCell.x;\r\n                    lastCell.y = firstCell.y - 70;\r\n                }\r\n\r\n                this.snake.push(lastCell);\r\n                firstCell = lastCell;\r\n\r\n                if (this.addNew) {\r\n                    this.incrementSnakeBodyWithPosition(new cc.Vec2(oldLastCellx, oldLastCelly));\r\n                    this.addNew = false;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    gameOver() {\r\n        this.gameText.active = true;\r\n        this.apple.destroy();\r\n        for (let i = 0; i < this.snake.length; i++) {\r\n            this.snake[i].destroy();\r\n        }\r\n        this.isPlaying = false;\r\n    }\r\n\r\n    reset() {\r\n        this.isPlaying = true;\r\n        this.initSnake();\r\n        this.spawnFood();\r\n        this.gameText.active = false;\r\n        this.score = 0;\r\n        this.scoreText.string = \"0\";\r\n        this.speed = 0;\r\n        this.direction = Direction.UP;\r\n        this.updateDelay = 0;\r\n    }\r\n}\r\n"]}